name: Build

on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request. 
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  Tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: Test
        run: go global -coverprofile=reports/coverage.out ./...
      - name: Upload global profile
        uses: actions/upload-artifact@v1
        with:
          name: coverprofile
          path: reports/coverage.out

  Security:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Get dependencies
        run: |
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s latest
          go get -v -t -d ./...
      - name: Run gosec
        run: |
          ./bin/gosec -no-fail -fmt=sonarqube -out=reports/security_scan.out ./...
      - name: Upload security results
        uses: actions/upload-artifact@v1
        with:
          name: securityscan
          path: reports/security_scan.out


  Quality:
    runs-on: ubuntu-latest
    needs: Tests
    steps:
      - uses: actions/checkout@v2
      - name: Download coverage reports
        uses: actions/download-artifact@v1
        with:
          name: coverprofile
          path: reports
      - name: Download security reports
        uses: actions/download-artifact@v1
        with:
          name: securityscan
          path: reports
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}